{"ast":null,"code":"import { reactive } from 'vue';\nimport { Collapse } from 'vue-collapsed';\nexport default {\n  __name: '11_Faq',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const questions = reactive([{\n      title: 'Question one',\n      answer: 'Answer one',\n      isExpanded: false // Initial value\n    }, {\n      title: 'Question two',\n      answer: 'Answer two',\n      isExpanded: false\n    }, {\n      title: 'Question three',\n      answer: 'Answer three',\n      isExpanded: false\n    }]);\n    function handleAccordion(selectedIndex) {\n      questions.forEach((_, index) => {\n        questions[index].isExpanded = index === selectedIndex ? !questions[index].isExpanded : false;\n      });\n    }\n\n    /**\n     * For individual control you might use:\n     *\n     * function handleMultiple(index) {\n     *   questions[index].isExpanded = !questions[index].isExpanded\n     * }\n     */\n\n    const __returned__ = {\n      questions,\n      handleAccordion,\n      reactive,\n      get Collapse() {\n        return Collapse;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AACA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,SAASC,QAAQ,QAAQ,eAAe;;;;;;;IAExC,MAAMC,SAAS,GAAGF,QAAQ,CAAC,CACzB;MACEG,KAAK,EAAE,cAAc;MACrBC,MAAM,EAAE,YAAY;MACpBC,UAAU,EAAE,KAAK,CAAC;IACpB,CAAC,EACD;MACEF,KAAK,EAAE,cAAc;MACrBC,MAAM,EAAE,YAAY;MACpBC,UAAU,EAAE;IACd,CAAC,EACD;MACEF,KAAK,EAAE,gBAAgB;MACvBC,MAAM,EAAE,cAAc;MACtBC,UAAU,EAAE;IACd,CAAC,CACF,CAAC;IAEF,SAASC,eAAe,CAACC,aAAa,EAAE;MACtCL,SAAS,CAACM,OAAO,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;QAC9BR,SAAS,CAACQ,KAAK,CAAC,CAACL,UAAU,GAAGK,KAAK,KAAKH,aAAa,GAAG,CAACL,SAAS,CAACQ,KAAK,CAAC,CAACL,UAAU,GAAG,KAAK;MAC9F,CAAC,CAAC;IACJ;;IAEA;AACA;AACA;AACA;AACA;AACA;AACA","names":["reactive","Collapse","questions","title","answer","isExpanded","handleAccordion","selectedIndex","forEach","_","index"],"sources":["/home/redalex/Документы/vue/web_project/src/components/11_Faq.vue"],"sourcesContent":["<script setup>\nimport { reactive } from 'vue'\nimport { Collapse } from 'vue-collapsed'\n\nconst questions = reactive([\n  {\n    title: 'Question one',\n    answer: 'Answer one',\n    isExpanded: false // Initial value\n  },\n  {\n    title: 'Question two',\n    answer: 'Answer two',\n    isExpanded: false\n  },\n  {\n    title: 'Question three',\n    answer: 'Answer three',\n    isExpanded: false\n  }\n])\n\nfunction handleAccordion(selectedIndex) {\n  questions.forEach((_, index) => {\n    questions[index].isExpanded = index === selectedIndex ? !questions[index].isExpanded : false\n  })\n}\n\n/**\n * For individual control you might use:\n *\n * function handleMultiple(index) {\n *   questions[index].isExpanded = !questions[index].isExpanded\n * }\n */\n</script>\n\n<template>\n  <div v-for=\"(question, index) in questions\" :key=\"question.title\">\n    <button @click=\"() => handleAccordion(index)\">\n      {{ question.title }}\n    </button>\n    <Collapse :when=\"questions[index].isExpanded\" class=\"collapse\">\n      <p>\n        {{ question.answer }}\n      </p>\n    </Collapse>\n  </div>\n</template>\n\n<style>\n.collapse {\n  transition: height 600ms cubic-bezier(0.3, 0, 0.6, 1);\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}